function add()
{
    var fruits = ["banana", "apple", "pineapple", "kiwi"];
    var count = 0;

    for (var i = 0; i < fruits.length; i++) {
        var fruit = fruits[i];

        if( fruit == "apple" )
            count += 2;
        else {
            count++;
        }
    }
    return count;
}

add();


// HELPER CLASSES
function isAnswerCorrect(index) {
    var answer = results.answers[index];

    if(answer === task_answers[index]) {
        return true;
    }
    return "";
}

function check_answers() {
    results.answers.forEach(function(answer, index) {
        if(!isAnswerCorrect(index)) { // dont need which is not correct? just need if all are or not?
            //return answer // already know that answer from index and task_answers
            // write to file/log
            results.all_answers_correct = true;
        }
    });
}

function convert_to_seconds(milliseconds) {
    var seconds = milliseconds / 1000;
    return seconds;
}





//answer_field.focus();   border on self, and caret if element is input field thats toveridden beahviour?
// uses the par to iterate the win objects functions? and calls it? or just uses the name and adds ()?




// calc diff ignoring direction
function difference(x, y) {
    var diff = 0;

    if(x > y)
        diff = x - y;
    else
        diff = y - x;

    return diff;
}
function calcModes() {
}
function calcMedians() {
}

// average time/mean time - all / length
// auto create means etc?

// save the task order aswell?

// must save if color or not
// delete task0 folder?
// the order of asnwers indicate, as long as not duplicate answers, the order of tasks. currently its not randomized.
// the order is static, its the same for everyone right now.






        // OUTPUT - what type represent good tasks?

        // when you use random names, it becomes a lot harder to understand the code. be aware.
         function foo() {

             var qux = ["banana", "apple", "pineapple", "kiwi"];
             var corge = 0;

             for (var i = 0; i < qux.length; i++) {
                 var garply = qux[i];

                 if( garply == "apple" ) {
                     corge += 2;
                 }
                 else {
                     corge++;
                 }
             }
             return corge;
         }

         var bar = foo();


        ////////////////////////////
        // var qux = [8, 3, 7, 7];
        //
        // function foo() {
        //     var baz = 0;
        //
        //     for(var i = 0; i <= qux.length; i++) {
        //         baz += qux[i];
        //     }
        //
        //     for(var i = 0; i <= qux.length / 2; i++) {
        //         baz += qux[i];
        //     }
        //
        //     return baz;
        //
        // }
        //
        // var bar = foo();


        function makeid(l) {
            var text = "";
            var char_list = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
            for(var i=0; i < l; i++ ) {
                text += char_list.charAt(Math.floor(Math.random() * char_list.length));
            }
            return text;
        }
        console.log(makeid(8));


        function foo(a) {
            var baz = 0;
            var gux = 2;

            for(var i = 0; i < a; i++) {
                baz += gux;
            }
            return baz;
        }

        var bar = foo(10);



        function foo(a) {
            if(typeof a == "string")
                return "A";

            if(typeof a == "boolean")
                return "B";

            if(typeof a == "number")
                return "C";

            if(typeof a == "object")
                return "D";
        }

        var bar = foo(true);


        ////////////////////////////

        function foo() {
            var baz = true;
            var qux = 0;

            while(baz == true) {
                qux += 2;

                if(qux >= 10) {
                    baz = false;
                }
            }

            return qux;

        }

        var bar = foo();


        ////////////////////////////////
        var qux = [8, 3, 7];

        function foo() {
            var baz = 0;

            for(var i = 0; i <= qux.length - 1; i++) {
                baz += qux[i];
            }

            return baz;

        }

        var bar = foo();

        ////////////////////////////////
        function foo(x, y) {
            var baz = 0;

            if(x > y)
                baz = x - y;
            else
                baz = y - x;

            return baz;
        }

        var bar = foo(2, 4);


        /////////////////////////////
        function baz(x, y) {
            return x + y;
        }

        function foo() {
            return baz(10, 5);
        }

        var bar = foo();


    // What is the value of bar? (output task) - this requires understanding what the program is doing
